<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- spring配置文件,数据源，事务控制  -->
	 
	<!-- 扫描(spring不扫controller)引入context --> 
	<context:component-scan base-package="com.gem.bbs">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 

	<!-- 数据源  -->
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<!--c3p0数据库连接池 -->
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	<!-- ========================================================== -->
	
	<!--将sqlSessionFactory交给spring管理 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis的全局文件配置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis的mapper文件 -->
		 <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 批量扫描接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.gem.bbs.mapper"></property>
	</bean>

	<!-- 配置一个可以指定批量的sqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
		<constructor-arg name="executorType" value="BATCH" />
	</bean>


	<!-- 事务控制的配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>

	<!-- 开启注解的事务，使用xml配置式的（主要使用的是配置式）引入aop -->
	<aop:config>
		<!-- 切入点表达式 第一个*任意返回值 ..任意包下 *任意方法..任意参数 -->
		<aop:pointcut expression="execution(* com.gem.bbs.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强 引入tx -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>


	<!-- 配置事务增强，事务如何切入,切入后怎么办 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*"/>
			<!-- 以get开头的所有方法,认为都是查询，优化 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- ========================================================== -->
	<!-- Spring配置文件的核心点（数据源、与mybatis的整合、事务控制） -->

</beans>
